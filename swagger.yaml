openapi: 3.0.0
info:
  title: FarmSwift API
  description: API documentation for FarmSwift
  version: 1.0.0
servers:
  - url: https://farmswift-api.onrender.com
    description: Production server
  - url: http://localhost:4000
    description: Local server

paths:
  /users/{id}:
    put:
      summary: Update existing user info
      description: Users can update their information.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                photo:
                  type: string
                role:
                  type: string
                user_role:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: A successful update of user information.
    delete:
      summary: Delete existing user info
      description: Users can delete their information.
      responses:
        "200":
          description: A successful deletion of user information.

  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users.
      responses:
        "200":
          description: A list of users.

  /users/bank-details:
    post:
      summary: Upload users' bank details
      description: Upload specific users' bank details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                bankName:
                  type: string
                accountNumber:
                  type: string
                bankCode:
                  type: string
      responses:
        "200":
          description: A success message.

  /auth/register:
    post:
      summary: Register user
      description: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                photo:
                  type: string
                role:
                  type: string
                user_role:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: A successful registration of user.

  /auth/login:
    post:
      summary: Login user
      description: Login registered user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        "200":
          description: A successful login of user.

  /auth/verify/{token}:
    post:
      summary: Verify registered user
      description: Verify registered users via email
      responses:
        "200":
          description: A successful verification of user.

  /auth/resend-verification-email:
    post:
      summary: Resend verification email
      description: Resend verification in case of failed email verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: A successful resend of verification email.

  /auth/update-bank-details/{userId}:
    put:
      summary: Update Bank Details
      description: Upload new or update existing bank details of sellers.
      responses:
        "200":
          description: A successful upload or update.

  /banks:
    get:
      summary: Get all bank list
      description: Retrieve a list of all banks with their codes.
      responses:
        "200":
          description: A list of banks.

  /orders/create:
    post:
      summary: Create new order
      description: Create a new order for the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                shippingAddress:
                  type: string
                email:
                  type: string
                  format: email
                name:
                  type: string
      responses:
        "200":
          description: A successful creation of customer order.

  /orders/pay:
    post:
      summary: Make payment for a particular order
      description: Make payment for the particular order.
      responses:
        "200":
          description: Payment is successful.

  /carts/{id}:
    delete:
      summary: Delete cart items
      description: Delete existing cart items.
      responses:
        "200":
          description: A successful deletion of cart items.
    get:
      summary: Get all cart items
      description: Get all cart items regardless of the user.
      responses:
        "200":
          description: A list of cart items.
    post:
      summary: Add cart items
      description: Add new items to cart.
      responses:
        "200":
          description: A successful addition of items to cart.

  /products:
    get:
      summary: Get all products
      description: Get all products.
      responses:
        "200":
          description: A list of products available.
    post:
      summary: Create Product
      description: Create new product.
      responses:
        "200":
          description: A successful creation of product.

  /products/{id}:
    get:
      summary: Get single product
      description: Get single product.
      responses:
        "200":
          description: Display of the single product.
    put:
      summary: Update single product
      description: Update single product.
      responses:
        "200":
          description: Updated single product.

  /reviews:
    post:
      summary: Add new review
      description: Add review to seller.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sellerId:
                  type: string
                rating:
                  type: integer
                review:
                  type: string
      responses:
        "200":
          description: A successful rating and review of seller.

  /wishes/{id}:
    delete:
      summary: Delete wish items
      description: Delete existing wish items.
      responses:
        "200":
          description: A successful deletion of wish items.
    get:
      summary: Get all wish items
      description: Get all wish items regardless of the user.
      responses:
        "200":
          description: A list of wish items.
    post:
      summary: Add wish items
      description: Add new items to wish list.
      responses:
        "200":
          description: A successful addition of items to wish list.
